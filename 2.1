#include "stdio.h"
#include "stdlib.h"
    int ModeNum = 0;
    int FreqNum = 0;
    //定义全局变量ModeNum 用来存储众数，FreqNum用来存储重数

int count(int a[],int p,int q) //定义一个统计数组中间数出现的次数，a为待统计的集合，参数p为待递归数组第一个数的索引，q为待递归数组最后一个数的索引
{
	int n=a[(p+q)/2];
	int cnt=0;
	int i=0;
	for(i=p;i<q;i++)
	{
		if(a[i]==n)
		{
			cnt++;
		}
	}
	return cnt;
}

int start(int a[],int p,int q)    //定义用于返回数组中间数第一次出现位置的索引方法,p为当前数组第一个数的位置索引，q为最后一个索引
{
	int x=0;
	int i=0;
	for(i=p;i<q;i++)
	{
		if(a[i]==a[(p+q)/2])
		{
			x=i;
			break;
		}
	}
	return x;

}

void mode(int a[],int p,int q)
{
	int midnum=(p+q)/2;         //midnum为当前数组中间数的索引
	int midsum=count(a,p,q);    //统计中间数的重数
	int left=start(a,p,q);      //找到数组中间数第一次出现的位置并记录 
	if(midsum>FreqNum)
	{
		FreqNum=midsum;
		ModeNum=a[midnum];
	}
	if(q-(left+midsum)>FreqNum)      //如果当前数组右边元素的个数大于重数sum,那么右边可能出现众数，向右递归寻找
	{
	mode(a,left+midsum,q);
	}
	if(left>FreqNum)                  //如果当前数组左边元素的个数大于重数sum,那么左边可能出现众数，向左递归寻找
	{
		mode(a,0,left);
	}
}

void main()
{
	int i;
	int a[7];
	printf("请输入7个整数:\n");
	for(i=0;i<7;i++)         //定义输入个数的循环条件
	{
		scanf("%d",&a[i]);
	}
	mode(a,0,7);
	printf("众数为:%d,重数为:%d\n",ModeNum,FreqNum);
}
